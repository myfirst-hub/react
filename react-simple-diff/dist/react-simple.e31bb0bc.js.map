{"version":3,"sources":["react/index.js","react-dom/index.js","index.js"],"names":["React","createElement","tag","attrs","childrens","ReactDOM","render","vnode","container","console","log","undefined","textNode","document","createTextNode","appendChild","dom","Object","keys","forEach","key","value","setAttribute","node","test","toLowerCase","style","cssText","k","removeAttribute","ele","querySelector"],"mappings":"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","file":"react-simple.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const React = {\r\n  createElement\r\n}\r\n\r\nfunction createElement(tag, attrs, ...childrens){\r\n  return {\r\n    tag, // 外层的标签\r\n    attrs, // 属性 是一个对象\r\n    childrens, // 是一个数组\r\n  }\r\n}\r\n\r\nexport default React;","const ReactDOM = {\r\n  render,\r\n}\r\n\r\nfunction render(vnode, container) {\r\n  console.log('vnode.........', vnode);\r\n  if (vnode === undefined) return;\r\n\r\n  // 如果vnode是字符串\r\n  if (typeof vnode === 'string') {\r\n    // 创建文本节点\r\n    const textNode = document.createTextNode(vnode);\r\n    return container.appendChild(textNode);\r\n  }\r\n\r\n\r\n  // 否则就是虚拟DOM对象\r\n  const {\r\n    tag,\r\n    attrs,\r\n    childrens = [],\r\n  } = vnode;\r\n  // 创建节点对象\r\n  const dom = document.createElement(tag);\r\n  if (attrs) {\r\n    // 有属性\r\n    Object.keys(attrs).forEach(key => {\r\n      const value = attrs[key];\r\n      setAttribute(dom, key, value);\r\n    });\r\n  }\r\n\r\n  // 递归渲染子节点\r\n  childrens.forEach(node => render(node, dom));\r\n\r\n  return container.appendChild(dom);\r\n\r\n  // 设置属性\r\n  function setAttribute(dom, key, value) {\r\n    //将属性名className转换成class\r\n    if (key === 'className') {\r\n      key = 'class';\r\n    }\r\n    // 如果是事件 onClick onBlur ...\r\n    if (/on\\w+/.test(key)) {\r\n      //转小写\r\n      key = key.toLowerCase();\r\n      dom[key] = value || '';\r\n    } else if (key === 'style') { // 针对属性为style的处理\r\n      if (!value || typeof value === 'string') {\r\n        dom.style.cssText = value || '';\r\n      } else if (value && typeof value === 'object') {\r\n        for (let k in value) {\r\n          // {width: 20}\r\n          if (typeof value[k] === 'number') {\r\n            dom.style[k] = value[k] + 'px';\r\n          } else {\r\n            dom.style[k] = value[k];\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // console.log('dom................', dom);\r\n      // console.log('key................', key);\r\n      // console.log('key in dom................', key in dom);\r\n      // 其他属性\r\n      if (key in dom) {\r\n        dom[key] = value || ''\r\n      }\r\n      if (value) {\r\n        // 更新值\r\n        dom.setAttribute(key, value);\r\n      } else {\r\n        dom.removeAttribute(key);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default ReactDOM;","import React from './react';\r\nimport ReactDOM from './react-dom';\r\n\r\nconst ele = (\r\n  <div className='active' title='123'>\r\n    hello,<span>react</span>\r\n  </div>\r\n)\r\n\r\nReactDOM.render('ele', document.querySelector('#root'));\r\n// ReactDOM.render(ele, document.querySelector('#root'));\r\n\r\n// const ele = /*#__PURE__*/React.createElement(\"div\", {\r\n//   className: \"active\",\r\n//   title: \"123\"\r\n// }, \"hello,\", /*#__PURE__*/React.createElement(\"span\", null, \"react\"));"]}